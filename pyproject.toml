[tool.poetry]
name = "tmi"
version = "0.1.0"
description = "Toolbox for Multiplexed Imaging. Contains scripts and little tools which are used throughout ark-analysis, mibi-bin-tools, and toffy."
authors = ["Angelo Lab <a@stanford.edu>"]
license = "Modified Apache 2.0"
homepage = "https://github.com/angelolab/tmi"
repository = "https://github.com/angelolab/tmi"
documentation = "https://tmi.readthedocs.io"
classifiers = ["Development Status :: 1 - Planning"]
packages = [
    { include = 'tmi', from = 'src' },
    { include = 'tmi/py.typed', from = 'src' },
]

[tool.poetry.urls]
Changelog = "https://github.com/angelolab/tmi/releases"

## DEPENDENCIES ##

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
numpy = "^1.22.2"
xarray = "^2022.3.0"
matplotlib = "^3.5.1"
seaborn = "^0.11.2"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
pytest = "^7.0.1"
mypy = "^0.931"
typeguard = "^2.13.3"
reorder-python-imports = "^2.7.1"
pre-commit-hooks = "^4.1.0"
flake8 = "^4.0.1"
coverage = { version = "^6.3.2", extras = ["toml"] }
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
flake8-docstrings = "^1.6.0"
flake8-bandit = "^2.1.2"
bandit = "1.7.2"
pyupgrade = "^2.31.0"
coveralls = "^3.3.1"
pytest-cases = "^3.6.9"
flake8-bugbear = "^22.1.11"
darglint = "^1.8.1"
pytest-randomly = "^3.11.0"
pylint = "^2.12.2"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

## LINTING, FORMATTING and TYPECHECKING ##

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.darglint]
ignore = "DAR402"

## COVERAGE ##

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["tmi"]

[tool.coverage.report]
exclude_lines = [
    "except ImportError",
    "raise AssertionError",
    "raise NotImplementedError",
]
show_missing = true
ignore_errors = false
fail_under = 45
omit = ["**/*test*.py"]

[tool.coverage.xml] # Output coverage as xml for text editor ui integration
output = "cov.xml"
package_depth = 99

## TESTING ##
[tool.pytest.ini_options]
addopts = ["-v", "-s", "--durations=20"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
norecursedirs = ["tests/utils"]
