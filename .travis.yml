language: python
python:
  - "3.9.10"
  - "3.10.2"

os: linux
dist: xenial

git:
  depth: false

stages:
  - Quality
  - Test
  - Pre-Commit
  # - Build
  # - Publish

# Set the caches
cache:
  pip: true
  directories:
    - "$HOME/.cache/pre-commit"

# Environment variables
env:
  # Set Matplotlib backend to Agg (Non-interactive, only writes to files)
  - MPLBACKEND=Agg


# Installs poetry, nox, and nox-poetry
before_install:
  - curl -sSL https://install.python-poetry.org | python3 -
  - poetry --version
  - pip install nox nox-poetry coveralls

# Installs all packages needed for tmi in a virtual environment
install:
  - poetry install

jobs:
  include:
    - stage: "Quality - 3.9"
      python: 3.9
      name: "Linting, Type Checking, Safety"
      script: nox --session mypy(python=3.9) typeguard(python=3.9) safety(python=3.9)
    - stage: "Test - 3.9"
      name: "Unit Tests"
      python: 3.9
      script: nox --session tests(python=3.9)
    - stage: "Quality - 3.10"
      python: 3.10
      name: "Linting, Type Checking, Safety"
      script: nox --session mypy(python=3.10) typeguard(python=3.10) safety(python=3.10)
    - stage: "Test - 3.10"
      name: "Unit Tests"
      python: 3.10
      script: nox --session tests(python=3.10)
    - stage: "Pre-Commit - 3.10"
      python: 3.10
      name: "Git Pre-Commit hooks"
      script: nox --session pre-commit(python=3.10)

after_success:
  - coveralls

notifications:
  email: false